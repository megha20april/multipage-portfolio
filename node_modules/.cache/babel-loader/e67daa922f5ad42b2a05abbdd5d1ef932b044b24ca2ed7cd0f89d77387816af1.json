{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = format;\nvar smallWords = /^(a|an|and|as|at|but|by|en|for|if|in|nor|of|on|or|per|the|to|vs?\\.?|via)$/i;\nfunction toTitleCase(string) {\n  return string.toString().trim().replace(/[A-Za-z0-9\\u00C0-\\u00FF]+[^\\s-]*/g, function (match, index, title) {\n    if (index > 0 && index + match.length !== title.length && match.search(smallWords) > -1 && title.charAt(index - 2) !== \":\" && (title.charAt(index + match.length) !== \"-\" || title.charAt(index - 1) === \"-\") && title.charAt(index - 1).search(/[^\\s-]/) < 0) {\n      return match.toLowerCase();\n    }\n    if (match.substr(1).search(/[A-Z]|\\../) > -1) {\n      return match;\n    }\n    return match.charAt(0).toUpperCase() + match.substr(1);\n  });\n}\n\n// See if s could be an email address. We don't want to send personal data like email.\n// https://support.google.com/analytics/answer/2795983?hl=en\nfunction mightBeEmail(s) {\n  // There's no point trying to validate rfc822 fully, just look for ...@...\n  return typeof s === \"string\" && s.indexOf(\"@\") !== -1;\n}\nvar redacted = \"REDACTED (Potential Email Address)\";\nfunction redactEmail(string) {\n  if (mightBeEmail(string)) {\n    console.warn(\"This arg looks like an email address, redacting.\");\n    return redacted;\n  }\n  return string;\n}\nfunction format() {\n  var s = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  var titleCase = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  var redactingEmail = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  var _str = s || \"\";\n  if (titleCase) {\n    _str = toTitleCase(s);\n  }\n  if (redactingEmail) {\n    _str = redactEmail(_str);\n  }\n  return _str;\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","format","smallWords","toTitleCase","string","toString","trim","replace","match","index","title","length","search","charAt","toLowerCase","substr","toUpperCase","mightBeEmail","s","indexOf","redacted","redactEmail","console","warn","arguments","undefined","titleCase","redactingEmail","_str"],"sources":["E:/just college things/reactfolio/node_modules/react-ga4/dist/format.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = format;\nvar smallWords = /^(a|an|and|as|at|but|by|en|for|if|in|nor|of|on|or|per|the|to|vs?\\.?|via)$/i;\nfunction toTitleCase(string) {\n  return string.toString().trim().replace(/[A-Za-z0-9\\u00C0-\\u00FF]+[^\\s-]*/g, function (match, index, title) {\n    if (index > 0 && index + match.length !== title.length && match.search(smallWords) > -1 && title.charAt(index - 2) !== \":\" && (title.charAt(index + match.length) !== \"-\" || title.charAt(index - 1) === \"-\") && title.charAt(index - 1).search(/[^\\s-]/) < 0) {\n      return match.toLowerCase();\n    }\n    if (match.substr(1).search(/[A-Z]|\\../) > -1) {\n      return match;\n    }\n    return match.charAt(0).toUpperCase() + match.substr(1);\n  });\n}\n\n// See if s could be an email address. We don't want to send personal data like email.\n// https://support.google.com/analytics/answer/2795983?hl=en\nfunction mightBeEmail(s) {\n  // There's no point trying to validate rfc822 fully, just look for ...@...\n  return typeof s === \"string\" && s.indexOf(\"@\") !== -1;\n}\nvar redacted = \"REDACTED (Potential Email Address)\";\nfunction redactEmail(string) {\n  if (mightBeEmail(string)) {\n    console.warn(\"This arg looks like an email address, redacting.\");\n    return redacted;\n  }\n  return string;\n}\nfunction format() {\n  var s = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  var titleCase = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  var redactingEmail = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  var _str = s || \"\";\n  if (titleCase) {\n    _str = toTitleCase(s);\n  }\n  if (redactingEmail) {\n    _str = redactEmail(_str);\n  }\n  return _str;\n}"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAAC,SAAS,CAAC,GAAGE,MAAM;AAC3B,IAAIC,UAAU,GAAG,4EAA4E;AAC7F,SAASC,WAAWA,CAACC,MAAM,EAAE;EAC3B,OAAOA,MAAM,CAACC,QAAQ,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,mCAAmC,EAAE,UAAUC,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAE;IAC1G,IAAID,KAAK,GAAG,CAAC,IAAIA,KAAK,GAAGD,KAAK,CAACG,MAAM,KAAKD,KAAK,CAACC,MAAM,IAAIH,KAAK,CAACI,MAAM,CAACV,UAAU,CAAC,GAAG,CAAC,CAAC,IAAIQ,KAAK,CAACG,MAAM,CAACJ,KAAK,GAAG,CAAC,CAAC,KAAK,GAAG,KAAKC,KAAK,CAACG,MAAM,CAACJ,KAAK,GAAGD,KAAK,CAACG,MAAM,CAAC,KAAK,GAAG,IAAID,KAAK,CAACG,MAAM,CAACJ,KAAK,GAAG,CAAC,CAAC,KAAK,GAAG,CAAC,IAAIC,KAAK,CAACG,MAAM,CAACJ,KAAK,GAAG,CAAC,CAAC,CAACG,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;MAC7P,OAAOJ,KAAK,CAACM,WAAW,CAAC,CAAC;IAC5B;IACA,IAAIN,KAAK,CAACO,MAAM,CAAC,CAAC,CAAC,CAACH,MAAM,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,EAAE;MAC5C,OAAOJ,KAAK;IACd;IACA,OAAOA,KAAK,CAACK,MAAM,CAAC,CAAC,CAAC,CAACG,WAAW,CAAC,CAAC,GAAGR,KAAK,CAACO,MAAM,CAAC,CAAC,CAAC;EACxD,CAAC,CAAC;AACJ;;AAEA;AACA;AACA,SAASE,YAAYA,CAACC,CAAC,EAAE;EACvB;EACA,OAAO,OAAOA,CAAC,KAAK,QAAQ,IAAIA,CAAC,CAACC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;AACvD;AACA,IAAIC,QAAQ,GAAG,oCAAoC;AACnD,SAASC,WAAWA,CAACjB,MAAM,EAAE;EAC3B,IAAIa,YAAY,CAACb,MAAM,CAAC,EAAE;IACxBkB,OAAO,CAACC,IAAI,CAAC,kDAAkD,CAAC;IAChE,OAAOH,QAAQ;EACjB;EACA,OAAOhB,MAAM;AACf;AACA,SAASH,MAAMA,CAAA,EAAG;EAChB,IAAIiB,CAAC,GAAGM,SAAS,CAACb,MAAM,GAAG,CAAC,IAAIa,SAAS,CAAC,CAAC,CAAC,KAAKC,SAAS,GAAGD,SAAS,CAAC,CAAC,CAAC,GAAG,EAAE;EAC9E,IAAIE,SAAS,GAAGF,SAAS,CAACb,MAAM,GAAG,CAAC,IAAIa,SAAS,CAAC,CAAC,CAAC,KAAKC,SAAS,GAAGD,SAAS,CAAC,CAAC,CAAC,GAAG,IAAI;EACxF,IAAIG,cAAc,GAAGH,SAAS,CAACb,MAAM,GAAG,CAAC,IAAIa,SAAS,CAAC,CAAC,CAAC,KAAKC,SAAS,GAAGD,SAAS,CAAC,CAAC,CAAC,GAAG,IAAI;EAC7F,IAAII,IAAI,GAAGV,CAAC,IAAI,EAAE;EAClB,IAAIQ,SAAS,EAAE;IACbE,IAAI,GAAGzB,WAAW,CAACe,CAAC,CAAC;EACvB;EACA,IAAIS,cAAc,EAAE;IAClBC,IAAI,GAAGP,WAAW,CAACO,IAAI,CAAC;EAC1B;EACA,OAAOA,IAAI;AACb"},"metadata":{},"sourceType":"script","externalDependencies":[]}